{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,IACTC,cAAc,IAGhB,IAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASK,eAAe,yBA+BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPV,EAAKC,OAAOiB,iBAAiB,UAzC7B,SAAkBC,GAChBA,EAAIC,iBAUN,SAA4BC,GAC1B,I,IAD4BC,EAAFD,EAAEC,WAAYC,EAAdF,EAAcE,OAAQC,EAAtBH,EAAsBG,KACvCC,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EAAG,CAExDjB,EAAciB,EADFC,OAAOJ,GAAcI,OAAOF,IAASE,OAAOD,GAAY,IAEjEE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBf,EAAAF,GAASG,OAAOiC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAGjDqB,OAAM,SAAAH,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBf,EAAAF,GAASG,OAAOoC,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,KAdnDuB,CANgB,CACdX,WAAYtB,EAAKI,QAAQ8B,MAEzBX,OAAQ,EACRC,KAAMxB,EAAKK,OAAO6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nNotiflix.Notify.init({\n  timeout: 2000,\n  clickToClose: true,\n});\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelecstor('input[name=\"amount\"]'),\n};\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const options = {\n    delayStart: refs.delayEl.value,\n    //  amount: refs.amountEl.value,\n    amount: 5,\n    step: refs.stepEl.value,\n  };\n  createPromiseStack(options);\n}\n\nfunction createPromiseStack({ delayStart, amount, step }) {\n  for (let position = 1; position <= amount; position += 1) {\n    let delay = Number(delayStart) + Number(step) * (Number(position) - 1);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', onSubmit);\n"],"names":["$iU1Pc","parcelRequire","$parcel$interopDefault","Notify","init","timeout","clickToClose","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","querySelecstor","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","param1","delayStart","amount","step","position1","Number","then","param","success","concat","catch","failure","$ce04d3a99e08e73b$var$createPromiseStack","value"],"version":3,"file":"03-promises.b68b1534.js.map"}